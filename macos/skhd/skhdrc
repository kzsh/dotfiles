#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


ctrl + alt + cmd - k : if ! [[ "$(yabai -m query --window owner)" == "iTerm2" ]]; then osascript -e 'tell application "iTerm2" to activate'; fi && skhd -k "cmd - n";
ctrl + alt + cmd - j : open -na /Applications/Google\ Chrome.app && sleep 1 && osascript -e 'tell application "Google Chrome" to activate'

# focus window
ctrl - h : if [[ "$(yabai -m query --windows | jq -r 'map(select(."focused" == 1)) | .[0].title')" == *"NVIM"* ]]; then skhd -k "ctrl + alt - h"; else yabai -m window --focus west; fi
ctrl - j : if [[ "$(yabai -m query --windows | jq -r 'map(select(."focused" == 1)) | .[0].title')" == *"NVIM"* ]]; then skhd -k "ctrl + alt - j"; else yabai -m window --focus south; fi
ctrl - k : if [[ "$(yabai -m query --windows | jq -r 'map(select(."focused" == 1)) | .[0].title')" == *"NVIM"* ]]; then skhd -k "ctrl + alt - k"; else yabai -m window --focus north; fi
ctrl - l : if [[ "$(yabai -m query --windows | jq -r 'map(select(."focused" == 1)) | .[0].title')" == *"NVIM"* ]]; then skhd -k "ctrl + alt - l"; else yabai -m window --focus east; fi

# swap window
ctrl + lcmd - h : yabai -m window --swap west
ctrl + lcmd - j : yabai -m window --swap south
ctrl + lcmd - k : yabai -m window --swap north
ctrl + lcmd - l : yabai -m window --swap east

# # go to desktop
# rcmd + shift + alt - 1 : yabai -m space --focus 1
# rcmd + shift + alt - 2 : yabai -m space --focus 2
# rcmd + shift + alt - 3 : yabai -m space --focus 3
# rcmd + shift + alt - 4 : yabai -m space --focus 4
# rcmd + shift + alt - 5 : yabai -m space --focus 5

# rcmd + shift + alt - 6 : yabai -m space --focus 6
# rcmd + shift + alt - 7 : yabai -m space --focus 7
# rcmd + shift + alt - 8 : yabai -m space --focus 8
# rcmd + shift + alt - 9 : yabai -m space --focus 9
# rcmd + shift + alt - 0 : yabai -m space --focus 10

# shift + ctrl - 1 : yabai -m space --focus 11
# shift + ctrl - 2 : yabai -m space --focus 12
# shift + ctrl - 3 : yabai -m space --focus 13
# shift + ctrl - 4 : yabai -m space --focus 14
# shift + ctrl - 5 : yabai -m space --focus 15

# send window to desktop
rcmd + shift - q : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 1))
rcmd + shift - w : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 2))
rcmd + shift - e : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 3))
rcmd + shift - r : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 4))
rcmd + shift - t : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 5))

rcmd + shift - a : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 6))
rcmd + shift - s : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 7))
rcmd + shift - d : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 8))
rcmd + shift - f : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 9))
rcmd + shift - g : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 10))

rcmd + shift - z : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 11))
rcmd + shift - x : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 12))
rcmd + shift - c : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 13))
rcmd + shift - v : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 14))
rcmd + shift - b : yabai -m window --space $((15 * $(cat ~/.config/karabiner-workspaces/current) + 15))

# shrink/extend width/height
ralt - h : yabai -m window --use-temporary-ratio -0.05 --adjust-window-edge west --adjust-window-edge east
ralt - j : yabai -m window --use-temporary-ratio -0.05 --adjust-window-edge north --adjust-window-edge south
ralt - k : yabai -m window --use-temporary-ratio  0.05 --adjust-window-edge north --adjust-window-edge south
ralt - l : yabai -m window --use-temporary-ratio  0.05 --adjust-window-edge west --adjust-window-edge east

# equalize size of windows
ralt - 0 : chunkc tiling::desktop --equalize

# set insertion point for focused container
# lcmd + shift - "esc" : yabai -m window --use-insertion-point cancel
lcmd + alt + ctrl - h : yabai -m window --use-insertion-point west
lcmd + alt + ctrl - j : yabai -m window --use-insertion-point south
lcmd + alt + ctrl - k : yabai -m window --use-insertion-point north
lcmd + alt + ctrl - l : yabai -m window --use-insertion-point east

# rotate tree
alt - r : yabai -m space --rotate 90

# mirror tree y-axis
# alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
# alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
ctrl + shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window parent zoom
shift + alt - f : yabai -m window --toggle parent

# toggle window split type
alt - x : yabai -m window --toggle split

# float / unfloat window
alt - t : yabai -m window --toggle float

# restart yabai
ctrl + alt + lcmd - r : brew services restart yabai & brew services restart skhd &

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp

# ctrl + alt + cmd - w : chunkc tiling::desktop --deserialize ~/.config/chunkwm/layouts/wide.json
# ctrl + alt + cmd - n : chunkc tiling::desktop --deserialize ~/.config/chunkwm/layouts/normal.json
# shift + ctrl + alt + cmd - w : chunkc tiling::desktop --serialize ~/.config/chunkwm/layouts/wide.json
# shift + ctrl + alt + cmd - n : chunkc tiling::desktop --serialize ~/.config/chunkwm/layouts/normal.json

# Disabled Command - h
cmd - h :
